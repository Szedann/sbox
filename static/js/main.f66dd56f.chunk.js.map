{"version":3,"sources":["images/bg.jpg","components/Navbar.tsx","components/BrowserCheck.tsx","analytics.ts","components/Captcha.tsx","components/Hack.tsx","components/Key.tsx","components/KeygenStart.tsx","components/Keygen.tsx","components/Download.tsx","components/LeakStart.tsx","components/Leak.tsx","components/Main.tsx","App.tsx","index.tsx"],"names":["Navbar","props","to","BrowserCheck","nextPage","setTimeout","from","randFloat","Math","random","floor","randonInt","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAnalytics","analytics","Captcha","sitekey","onVerify","logEvent","Hack","useState","logMessages","setLogMessages","addMessage","content","success","oldLogMessages","key","length","useEffect","amount","amountOfFiles","timeSinceFileSearch","i","className","slice","reverse","map","message","LogMessage","rickRoll","window","location","href","steamKeygen","generateChar","charTable","charAt","Key","type","onFocus","onCopy","value","Start","onClick","Keygen","page","setPage","prevPage","pg","KeygenStart","renderSwitch","DownloadPage","Download","Main","App","src","background","alt","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f66dd56f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.7c6d2124.jpg\";","import React from 'react'\r\nimport {Link, BrowserRouter} from 'react-router-dom'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Navbar: React.FC<{}> = (props: Props) => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <h1>\r\n                    <b>s&box</b> center\r\n                </h1>\r\n                <nav>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/download\">Leak</Link>\r\n                    <Link to=\"/keygen\">Keygen</Link>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","interface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\nconst BrowserCheck = ({nextPage}: Props) => {\r\n    const randonInt = (from:number, to:number):number => {\r\n        const randFloat = Math.random()\r\n        return Math.floor( randFloat * ( to - from ) ) + from\r\n    }\r\n    setTimeout(()=>{\r\n        nextPage()\r\n    },randonInt(3000,8000))\r\n    return (\r\n        <div>\r\n            <h1>Hold up...</h1>\r\n            <p>\r\n                We are verifying your browser. <br />\r\n                This takes about 5 seconds.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrowserCheck\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/analytics'\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyBZlDM1Lxf72I2Dp_7Kb57Zo54Zj8qGWI8\",\r\n  authDomain: \"sbox-keys.firebaseapp.com\",\r\n  projectId: \"sbox-keys\",\r\n  storageBucket: \"sbox-keys.appspot.com\",\r\n  messagingSenderId: \"557108384972\",\r\n  appId: \"1:557108384972:web:2185ea8c4bd67277f25e69\",\r\n  measurementId: \"G-HP03H1DRMR\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const firebaseAnalytics = firebase.analytics()","import HCaptcha from '@hcaptcha/react-hcaptcha';\r\nimport { firebaseAnalytics } from \"../analytics\"\r\n\r\ninterface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\nconst Captcha = ({nextPage}: Props) => {\r\n    return (\r\n        <div>\r\n            <h1>Are you a human?</h1>\r\n            <form>\r\n                <HCaptcha\r\n                    sitekey='d700f172-32de-4e54-a1b2-a3b66342c0c1'\r\n                    onVerify={()=>{firebaseAnalytics.logEvent('capthca_complete'); nextPage()}}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Captcha\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst randonInt = (from:number, to:number):number => {\r\n    const randFloat = Math.random()\r\n    return Math.floor( randFloat * ( to - from ) ) + from\r\n}\r\n\r\ninterface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\ninterface Message{\r\n    content: string;\r\n    success: boolean;\r\n    key: number;\r\n}\r\n\r\nconst Hack = ({nextPage}: Props) => {\r\n    const [logMessages, setLogMessages] = useState([])\r\n    const addMessage = (content: string, success: boolean = true) => {\r\n        //@ts-expect-error\r\n        setLogMessages(oldLogMessages => { return [...oldLogMessages, {content, success, key: oldLogMessages.length}] })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        addMessage('Hacking into the valve mainframe')\r\n\r\n        setTimeout(() => {\r\n            addMessage('attempting SQL injection...')\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n            addMessage('SQL injection failed. (ERROR 402)', false)\r\n        }, 5000);\r\n\r\n        setTimeout(() => {\r\n            addMessage('re-attempting SQL injection...')\r\n        }, 5300);\r\n\r\n        setTimeout(() => {\r\n            addMessage('SQL injection attack success')\r\n        }, 6500);\r\n\r\n        setTimeout(() => {\r\n            addMessage('looking for keys')\r\n        }, 7000);\r\n\r\n        const amount = randonInt(300, 2500)\r\n\r\n        const amountOfFiles = randonInt(2500, 3500)\r\n\r\n        const timeSinceFileSearch = (7050+(amount*20))*( amount/300 * amount / amount )\r\n\r\n        for(let i = 0; i < amount; i++){\r\n            setTimeout(() => {\r\n                if(i === amount-1){\r\n                    addMessage(`checked file ${i}/${amountOfFiles} - 1 key found`);\r\n                 }else{\r\n                    addMessage(`checked file ${i}/${amountOfFiles} - no keys found`, false)\r\n                 }\r\n            }, 7050+i*20*( i / 250 * i / amount ));\r\n        }\r\n\r\n        setTimeout(() => {\r\n            addMessage('Found 1 key. redirecting...')\r\n        }, timeSinceFileSearch + 250);\r\n\r\n\r\n        setTimeout(() => {\r\n            nextPage()\r\n        }, timeSinceFileSearch + 2150);\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Hacking valve...</h1>\r\n            <div className=\"log\">\r\n                {\r\n                    logMessages.slice().reverse().map(message=> (\r\n                        //@ts-expect-error\r\n                        <LogMessage key={message.key} message={message} />\r\n                    ))\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hack\r\n\r\nconst LogMessage = ({message}: {message: Message}) => {\r\n    return (\r\n        <div className={`log-message ${message.success ? 'success' : 'error'}`}>\r\n            {message.content}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { firebaseAnalytics } from \"../analytics\"\r\n\r\nconst randonInt = (from:number, to:number):number => {\r\n    const randFloat = Math.random()\r\n    return Math.floor( randFloat * ( to - from ) ) + from\r\n}\r\n\r\ninterface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\nconst rickRoll = ()=>{\r\n    firebaseAnalytics.logEvent('rick_rolled')\r\n    window.location.href = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'\r\n}\r\n\r\nconst steamKeygen = () => {\r\n    const generateChar = (charTable:string = \"ABCDEFGHIJLKMNOPQRTTUVWXYZ0123456789\") => {\r\n        return charTable.charAt(Math.floor(Math.random()*charTable.length))\r\n    }\r\n    return generateChar()+generateChar()+generateChar()+generateChar()+generateChar()+\"-\"+generateChar()+generateChar()+generateChar()+generateChar()+generateChar()+\"-\"+generateChar()+generateChar()+generateChar()+generateChar()+generateChar()\r\n}\r\n\r\nconst Key = ({nextPage}: Props) => {\r\n    useEffect(()=>{\r\n        firebaseAnalytics.logEvent('hacking_complete')\r\n    }, [])\r\n    const [logMessages, setLogMessages] = useState([])\r\n    const addMessage = (content: string, success: boolean = true) => {\r\n        //@ts-expect-error\r\n        setLogMessages(oldLogMessages => { return [...oldLogMessages, {content, success, key: oldLogMessages.length}] })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Here's your key!</h1>\r\n            <div>\r\n                <input type=\"text\" onFocus={rickRoll} onCopy={rickRoll} className=\"code\" value={steamKeygen()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key","import React, { useEffect } from 'react'\r\nimport { firebaseAnalytics } from \"../analytics\"\r\n\r\n\r\ninterface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\nconst Start = ({nextPage}:Props) => {\r\n    useEffect(()=>{\r\n        firebaseAnalytics.logEvent(\"homepage_visited\")\r\n      }, [])\r\n    return (\r\n        <div>\r\n            <h1>Generate a key</h1>\r\n            <div className=\"btn\" onClick={nextPage}>Generate</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Start\r\n","import React, { useState } from 'react'\r\n\r\nimport BrowserCheck from './BrowserCheck'\r\nimport Captcha from './Captcha'\r\nimport Hack from './Hack'\r\nimport Key from './Key'\r\nimport KeygenStart from './KeygenStart'\r\n\r\n\r\nconst Keygen = () => {\r\n    const [page, setPage] = useState(0)\r\n    const [nextPage, prevPage] = [\r\n      ()=>{setPage(page=>{return page+1})},\r\n      ()=>{setPage(page=>{return page-1})}\r\n    ]\r\n  \r\n    const renderSwitch = (pg:number)=>{\r\n      switch(pg){\r\n        case 0: { return <KeygenStart nextPage={nextPage} prevPage={prevPage} /> }\r\n        case 1: { return <BrowserCheck nextPage={nextPage} prevPage={prevPage} /> }\r\n        case 2: { return <Captcha nextPage={nextPage} prevPage={prevPage} /> }\r\n        case 3: { return <Hack nextPage={nextPage} prevPage={prevPage} /> }\r\n        case 4: { return <Key nextPage={nextPage} prevPage={prevPage} /> }\r\n        default: { return <KeygenStart nextPage={nextPage} prevPage={prevPage} /> }\r\n      }\r\n    }\r\n  \r\n    return renderSwitch(page);\r\n}\r\n\r\nexport default Keygen\r\n","import HCaptcha from '@hcaptcha/react-hcaptcha';\r\nimport { firebaseAnalytics } from \"../analytics\"\r\n\r\ninterface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\nconst DownloadPage = ({nextPage}: Props) => {\r\n    return (\r\n        <div>\r\n            <h1>Here's your file!</h1>\r\n            <div>\r\n                <a className=\"btn\" onClick={()=>{firebaseAnalytics.logEvent('download')}} href=\"https://leaks.poggu.me/sbox\">Download</a> <br />\r\n                {/* <a href=\"/\">Download too slow?</a> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DownloadPage\r\n","import React, { useEffect } from 'react'\r\nimport { firebaseAnalytics } from \"../analytics\"\r\n\r\n\r\ninterface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\nconst Start = ({nextPage}:Props) => {\r\n    useEffect(()=>{\r\n        firebaseAnalytics.logEvent(\"homepage_visited\")\r\n      }, [])\r\n    return (\r\n        <div>\r\n            <h1>Download s&box leak</h1>\r\n            <div className=\"btn\" onClick={nextPage}>Download</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Start\r\n","import React, { useState } from 'react'\r\n\r\nimport BrowserCheck from './BrowserCheck'\r\nimport Captcha from './Captcha'\r\nimport Download from './Download'\r\nimport Start from './LeakStart'\r\n\r\n\r\nconst Keygen = () => {\r\n    const [page, setPage] = useState(0)\r\n    const [nextPage, prevPage] = [\r\n      ()=>{setPage(page=>{return page+1})},\r\n      ()=>{setPage(page=>{return page-1})}\r\n    ]\r\n  \r\n    const renderSwitch = (pg:number)=>{\r\n      switch(pg){\r\n        case 0: { return <Start nextPage={nextPage} prevPage={prevPage} /> }\r\n        case 1: { return <BrowserCheck nextPage={nextPage} prevPage={prevPage} /> }\r\n        case 2: { return <Captcha nextPage={nextPage} prevPage={prevPage} /> }\r\n        case 3: { return <Download nextPage={nextPage} prevPage={prevPage} /> }\r\n        default: { return <Start nextPage={nextPage} prevPage={prevPage} /> }\r\n      }\r\n    }\r\n  \r\n    return renderSwitch(page);\r\n}\r\n\r\nexport default Keygen\r\n","import {Link} from 'react-router-dom'\r\n\r\ninterface Props{\r\n    prevPage: ()=>void,\r\n    nextPage: ()=>void,\r\n}\r\n\r\nconst Main = ({nextPage}: Props) => {\r\n    return (\r\n        <div>\r\n            <h1>s&box center</h1>\r\n            <div>\r\n                <Link className=\"btn\" to=\"/download\">s&box leak</Link>\r\n                <Link className=\"btn\" to=\"/keygen\">s&keygen</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, { useState, useEffect } from 'react'\nimport { firebaseAnalytics } from './analytics';\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom'\n\n\nimport './css/style.css'\nimport background from './images/bg.jpg'\n\nimport Navbar from './components/Navbar';\nimport Start from './components/KeygenStart';\nimport BrowserCheck from './components/BrowserCheck';\nimport Captcha from './components/Captcha';\nimport Hack from './components/Hack';\nimport Key from './components/Key';\nimport Keygen from './components/Keygen';\nimport Download from './components/Leak';\nimport Main from './components/Main';\n\nconst App = () => {\n\n  return(\n        <HashRouter>\n          <img src={background} alt=\"bg\" className=\"website-background\" />\n          <Navbar />\n          <main>\n              <Switch>\n                <Route path=\"/keygen\" component={Keygen} />\n                <Route path=\"/download\" component={Download} />\n                <Route exact path=\"/\" component={Main}/>\n              </Switch>\n          </main>\n        </HashRouter>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport firebase from 'firebase/app'\nimport {firebaseConfig} from './analytics'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}